Firstly, all Nmap quests are started by typing 'nmap' followed by the target(s) and any switches. You can access a help sheet with a list of all switches by typing 'nmap -h'. 		      					Try this now and click 'Next' once complete.
For Nmap to perform a scan, you need to first give it a target. Get your own IP address by typing 'ipconfig' and note this down. Performing a scan on its own will not show you anything, so you need to set the verbosity of the response by adding either -v or -vv to the end of your command. 							Try typing 'nmap <yourIPaddress> -vv' and click 'Next' once complete.
See those ports? That's what we're looking for, but let's stay focused on targets for now. Nmap gives us the ability to scan multiple IP addresses in a number of ways. You can: Simply enter all of the addresses in full in your command; give the command a list of consecutive targets by appending the last number of each address onto the first (eg. 192.168.0.1,2,3,4,5); or give it a range of addresses to scan (192.168.0.1-20) 							Try scanning the first 10 devices on your network by entering the command 'nmap 192.168.0.1-10 -vv' and click 'Next' once complete. (This may take a minute)
If you want to find any potential targets on a network, you can use a ping scan to see what hosts are up so you don't have to do a full scan which can take a while. To do this, add '-sn' to the command after giving it a target. 							Try typing 'nmap 192.168.0.1-255 -sn -vv' and click 'Next' once complete.
Now we've got some targets, let's take a look at what types of scans we can do. You should have seen some ports when you scanned your device, and this is generally what we're looking for, but we can get a lot more information than this. We can use the '-sV' switch to tell Nmap to scan the ports for what services are running on them and what version it is. 						Try typing 'nmap <yourIPaddress> -sV -vv' and click 'Next' once complete.
Knowing the services and versions is a big step in being able to find vulnerabilities, as it only takes one port with an outdated service to give an attacker a way in. Another potential vulnerability is the operating system running on the device, which Nmap can detect with a measure of probability by using the '-O' switch. 								Try adding this to the previous command by typing 'nmap <yourIPaddress> -sV -O -vv'. Click 'Next' once complete.
Next we'll be looking at targeting specific ports, as some are much more likely to be running services with exploits than others. The switch for targeting specific ports is '-p' followed by the port number (eg -p80). 								Let's try scanning your device again but only targeting ports 22, 80 and 113 by typing 'nmap <yourIPaddress> -sV -p22,80,113 -vv' and click 'Next' once complete.
You can also scan a range of ports by using the same format as when you scan a range of IP addresses (eg -p22-150) or you scan specify the port by the service name (eg -p http). 						Try scanning your device for ports with only the http service running on them by typing 'nmap <yourIPaddress> -sV -p http -vv' and click 'Next' once complete.
The final type of scan we can use is one that makes use of scripts. Scripts are wide-ranging in their functions but are a great way of quickly determining if a target has known vulnerabilities in the services on the ports. One of the most well-known is called 'vulners' and we will be using that in our next scan. It will modify the results given to you to show a number of URLs explaining the vulnerabilties it has found. 					Let's use a live target for this one, so try typing 'nmap scanme.nmap.org -sV --script=vulners -vv' and wait for the results. Click 'Next' once complete.
Each one of those URLs will direct you to a unique vulnerability that could potentially be exploited, but many targets will have firewalls and intrusion detection systems (IDS) for just this reason. Luckily, there are a number of things we can try to avoid them. The first is to use tiny fragmented packets that make it difficult to detect when a scan is being performed. To do this, add the '-f' switch to any command but be warned, this makes scans take MUCH longer and works best when deployed from a linux-based system. Click 'Next to continue.
The next switch to try when avoiding firewalls and IDS' is one that can throttle or boost performance of the scan based on your needs. The lower the performance the more likely you are to evade security systems, with the reverse also being true. To add this switch, add '-T <0-5>' with 0 being the slowest but sneakiest, and 5 being very high performance but also high likelihood of detection and requires very fast connections (Default scans are set at T3 for reference). 								Try typing 'nmap scanme.nmap.org -sV --script=vulners -T4 -vv' and then again with 'T1' and see if you can notice the difference in speed. Click 'Next' once complete.
Another way to avoid intrusion detection systems is to introduce a delay between the probes sent out by Nmap to the target. To do this, add '--scan-delay <time>' to your command. Naturally this will slow the scan down but a time of 1075ms will usually go undetected by most IDS. 							Try typing 'nmap <yourIPaddress> -sV --scan-delay 1075ms -vv' (Again, this may take a while) and click 'Next' to continue.
If you're not worried about your scan being detected but would still rather that it can't be traced back to you, you may consider using decoy IP addresses which hide your IP among a number of others. To do this add '-D <decoyIP1><decoyIP2><yourIP><decoyIP3><decoyIP4>' to your command (you can have more decoys and if you leave your IP out, Nmap will put it in randomly). 					Try performing any scan using decoy IP addresses and click 'Next' to continue.
Well done! You've now completed the Nmap quest-line! Keep in mind these are the fundemental tools with many variations and can all be used together for more complex scans. If you're ever unsure of what command to use, remember to bring up the help sheet with 'nmap -h'. Happy scanning!