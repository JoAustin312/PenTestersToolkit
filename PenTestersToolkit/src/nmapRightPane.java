import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.ListIterator;
import java.util.Scanner;


public class nmapRightPane extends JPanel implements ActionListener {
    private JTextArea currPane;
    private JPanel btnPane;
    private JButton next;
    private JButton prev;
    private ArrayList<String> quests;
    private String current;
    private ListIterator<String> iter;



    public nmapRightPane(){
        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        currPane = new JTextArea("Welcome to the Nmap quest-line \nThese quests are designed to help you learn the basics of Nmap and how they are used in penetration testing. \n \nNote: While the commands are being run, the text you have entered will remain in the input field until the command is completed. \n \nClick the 'Next' button to continue.",35, 25);
        currPane.setLineWrap(true);
        currPane.setWrapStyleWord(true);
        btnPane = new JPanel();
        quests = new ArrayList<>();
        setQuests(quests);
        iter = quests.listIterator();
        currPane.setEditable(false);
        add(currPane);

        next = new JButton("Next");
        next.addActionListener(this);
        prev = new JButton("Back");
        prev.addActionListener(this);

        btnPane.setLayout(new BoxLayout(btnPane, BoxLayout.LINE_AXIS));
        btnPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        btnPane.add(prev);
        btnPane.add(Box.createRigidArea(new Dimension(150, 50)));
        btnPane.add(next);
        add(btnPane);
    }

    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==next){
            nextQ();
        }else if (e.getSource()==prev){
            prevQ();
        };
    }

    public void nextQ(){
        while ( iter.hasNext() ) {
            current = iter.next();
            setText(current);
            break;
        }
    };
    public void prevQ(){
        while ( iter.hasPrevious() ) {
            current = iter.previous();
            setText(current);
            break;
        }
    };

    public void setQuests(ArrayList<String> quest){
        try (Scanner s = new Scanner(new FileReader("NmapQuests.txt"))) {
            while (s.hasNext()) {
                quest.add(s.nextLine());
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }
    public ArrayList<String> getQuests() {
        return this.quests;
    }

    public void setText(String text){
        currPane.setText(text);
    }

}