import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.font.TextAttribute;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;

public class myConsole extends JPanel {
    private JTextArea outputPane;
    private JTextField inputPane;
    private JScrollPane scrollPane;

    public myConsole(){

        outputPane = new JTextArea(25,70);
        scrollPane = new JScrollPane(outputPane);
        inputPane = new JTextField(20);

        outputPane.setEditable(false);
        Map<TextAttribute, Object> attr = new HashMap<>();
        attr.put(TextAttribute.FAMILY, Font.MONOSPACED);
        outputPane.setFont(new Font(attr));
        outputPane.setForeground(Color.white);
        outputPane.setBackground(Color.black);

        inputPane.setFont(new Font(attr));
        inputPane.setForeground(Color.white);
        inputPane.setBackground(Color.black);
        inputPane.setMaximumSize(new Dimension(Integer.MAX_VALUE, inputPane.getPreferredSize().height) );
        inputPane.addActionListener(ev -> this.sendCommand());

        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        add(scrollPane);
        add(inputPane);


    }
    public void sendCommand() {
        String consoleCommand = inputPane.getText();
        outputPane.append(consoleCommand + "\n");
        try {
            outputPane.setText(outputPane.getText() + consoleExecOutput(consoleCommand));
        } catch (IOException e1) {
            e1.printStackTrace();
        } catch (InterruptedException e1) {
            e1.printStackTrace();
        }
        inputPane.setText("");
    };

    public String consoleExecOutput(String inputCommand) throws IOException, InterruptedException {
        String consoleOutput = "";
        String line = "";

        ProcessBuilder pb = new ProcessBuilder("cmd", "/c", inputCommand);
        Process proc = pb.start();
        BufferedReader reader = new BufferedReader(new InputStreamReader(proc.getInputStream()));

        while((line = reader.readLine()) != null) {
            consoleOutput = consoleOutput + line + "\n";
        }

        proc.waitFor();
        return consoleOutput;
    }
}